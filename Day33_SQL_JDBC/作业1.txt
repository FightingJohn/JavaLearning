将课堂上讲过的例子及对应的sql语句都动手敲一遍！
sql语句不熟练请敲两遍！敲到直接写不报错为止！

1，连接查询
USE mydb1;

CREATE TABLE `customer` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(100) DEFAULT NULL,
  `city` VARCHAR(20) DEFAULT NULL,
  PRIMARY KEY  (`id`)
);

INSERT INTO `customer` VALUES
(1,'郭靖','襄阳'),
(2,'黄药师','桃花岛'),
(3,'欧阳锋','西域'),
(4,'段正淳','大理'),
(5,'周伯通','终南山');

CREATE TABLE `orders` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `order_number` VARCHAR(100) DEFAULT NULL,
  `price` FLOAT(8,2) DEFAULT NULL,
  `customer_id` INT(11) DEFAULT NULL,
  PRIMARY KEY  (`id`),
  CONSTRAINT `customer_id_fk` FOREIGN KEY (`customer_id`) REFERENCES `customer` (`id`)
);

INSERT INTO `orders` VALUES 
(1,'0001',100.00,1),
(2,'0002',200.00,1),
(3,'0003',300.00,1),
(4,'0004',100.00,2),
(5,'0005',200.00,3),
(6,'0006',100.00,4),
(7,'0007',1000.00,4);


交叉连接查询
SELECT * FROM customer CROSS JOIN orders;

显式内连接
SELECT * FROM customer c INNER JOIN orders o ON c.`id`=o.`customer_id`; 

左外连接
SELECT * FROM customer c LEFT OUTER JOIN orders o ON c.`id`=o.`customer_id`;
SELECT * FROM customer c LEFT OUTER JOIN orders o ON c.`id`=o.`customer_id` WHERE o.`price`>200;

右外连接
SELECT * FROM customer c RIGHT OUTER JOIN orders o ON c.`id`=o.`customer_id`;
SELECT * FROM customer c RIGHT OUTER JOIN orders o ON c.`id`=o.`customer_id` WHERE o.`price`>200;

嵌套查询
SELECT * FROM orders WHERE customer_id=(SELECT id FROM customer WHERE NAME LIKE "%郭靖%");

联合查询
SELECT * FROM orders WHERE price > 100 UNION SELECT * FROM orders WHERE customer_id=1;

常用统计函数
SELECT COUNT(id) FROM customer;
SELECT SUM(price) FROM orders;
SELECT AVG(price) FROM orders;
SELECT NAME FROM customer WHERE id=(SELECT MAX(customer_id) FROM orders);

group by 练习

INSERT INTO order2(id,product,price) VALUES
(1,'电视',900),
(2,'洗衣机',100),
(3,'洗衣粉',90),
(4,'桔子',9),
(5,'洗衣粉',90);
SELECT product,SUM(price) FROM order2 GROUP BY product;
select product,sum(price) from order2 group by product having sum(price)>100;








